@{
    Layout = "_AdminLayout";
    ViewBag.Title = "Manage Reviews";
}

@section styles{

    <link href="/assets/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
<link href="~/assets/plugins/summernote-master/summernote.css" rel="stylesheet" />
    <style>
        .bs-example-modal-lg .modal-dialog .modal-dialog {
            border: 1px solid #9c9797;
            box-shadow: #bfb3b3 3px 3px 20px 8px;
        }

        .modal-header {
            background-color: #dadada;
        }

        .tab-content {
            border-bottom: 1px solid lightgray;
            border-left: 1px solid lightgray;
            border-right: 1px solid lightgray;
        }

        .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > a:focus, .nav-tabs.nav-justified > .active > a:hover {
            background-color: #d1dbe4;
        }
    </style>
}




@section breadcrumb{
    <ol class="breadcrumb">
        <li><a href="/">Home</a></li>
        <li><a href="/dashboard">Dashboard</a></li>
        <li class="active">Manage Review</li>
    </ol>
}


<div class="row">
    <div class="col-sm-12">
        <div class="panel panel-white">
            <div class="panel panel-heading">
                <h2 class="panel-title">
                    <span>Manage Review</span>
                </h2>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div role="tabpanel">
                            <!-- Nav tabs -->
                            <ul class="nav nav-tabs nav-justified" role="tablist">
                                <li role="presentation" class="active">
                                    <a href="#tab_price" role="tab" data-toggle="tab" aria-expanded="false">
                                        <span class="badge badge-info">1</span>&nbsp;<span>Review List</span>
                                    </a>
                                </li>
                                <li role="presentation">
                                    <a href="#tab_basic" role="tab" data-toggle="tab" aria-expanded="true">
                                        <span class="badge badge-info">2</span>&nbsp;<span id="tab-1-txt">Update</span>
                                    </a>
                                </li>                                
                            </ul>
                            <!-- Tab panes -->
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane fade" id="tab_basic">
                                    <form id="new-form" data-bind="submit:Save_Review">
                                        <div class="row">
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label class="control-label">Review For</label>
                                                    <span class="form-control" style="padding: 7px 10px!important;" data-bind="text:Review.ReviewFor"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label class="control-label">Product Name</label>
                                                    <span class="form-control" style="padding: 7px 10px!important;" data-bind="text:Review.Reference_Name"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label class="control-label">Rating</label>
                                                    <input type="number" class="form-control" data-bind="value:Review.Rating, valueUpdate:'afterkeydown'" />
                                                </div>
                                            </div>
                                            <div class="col-sm-3">
                                                <div class="form-group">
                                                    <label class="control-label">Active</label>
                                                    <div class="input-group">
                                                        <div class="input-group-addon">
                                                            <input type="checkbox" value="true" data-bind="checked:Review.Active" />
                                                        </div>
                                                        <span class="form-control" style="padding: 7px 10px!important;" data-bind="text:Review.Active"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Title:</label>
                                                    <input type="text" class="form-control" placeholder="Enter Blog Title" required
                                                           data-bind="value:Review.Title, valueUpdate:'afterkeydown'" />
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label">Url: </label>
                                                    <span class="form-control" style="padding: 7px 10px!important;" data-bind="text:Review.Link"></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Content:</label>
                                                    <div id="Content-box"></div>
                                                </div>
                                            </div>                                           
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Introduction:</label>
                                                    <div id="Introduction-box"></div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Positive Points:</label>
                                                    <div id="Positive_Points-box"></div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Negative Points:</label>
                                                    <div id="Negative_Points-box"></div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="control-label">Conclusion:</label>
                                                    <div id="Conclusion-box"></div>
                                                </div>
                                            </div>
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <button type="submit" class="btn btn-success" form="new-form" data-bind="disable:IsSaving">
                                                        <span>Save</span>
                                                        <span class="fa fa-spinner fa-spin" data-bind="visible:IsSaving"></span>
                                                    </button>
                                                    <button type="button" class="btn btn-default" data-bind="click:ClearAllFields">
                                                        <span>Cancel</span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div role="tabpanel" class="tab-pane fade active in" id="tab_price">
                                    <div class="row">
                                        <div class="col-sm-12 table-responsive">
                                            <table class="table table-bordered table-hover">
                                                <thead>
                                                    <tr>
                                                        <th style="width:100px;">#</th>
                                                        <th>Title</th>
                                                        <th>User</th>
                                                        <th>Review For</th>
                                                        <th>Rating</th>
                                                        <th>Active</th>
                                                        <th>Source</th>
                                                        <th>Added On</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="hidden">
                                                    <tr>
                                                        <td></td>
                                                        <td>
                                                            <input type="text" class="form-control" placeholder="Search..."
                                                                   data-bind="value:SearchText, valueUpdate:'afterkeydown'" />
                                                        </td>
                                                        <td colspan="6"></td>
                                                    </tr>
                                                </tbody>
                                                <tbody data-bind="foreach:ReviewList">
                                                    <tr>
                                                        <td style="width:100px;" data-bind="text: $index()+1"></td>
                                                        <td data-bind="text: $data.Title"></td>
                                                        <td data-bind="text: $data.UserName"></td>
                                                        <td>
                                                            <a href="#" target="_blank" data-bind="attr:{href:$data.Reference_Link}">
                                                                <span data-bind="text: $data.Reference_Name"></span>
                                                            </a>
                                                        </td>
                                                        <td data-bind="text: $data.Rating"></td>
                                                        <td>
                                                            <span data-bind="text: $data.Active()?'Yes':'No'"></span>
                                                        </td>
                                                        <td>
                                                            <span data-bind="text: ($data.Igdb_Id>0)?'Igdb':'GameStoreMe'"></span>
                                                        </td>
                                                        <td>
                                                            <span data-bind="visible:$data.Created_at!=null">
                                                                <span data-bind="text: moment($data.Created_at).format('Do MMM YYYY')"></span>
                                                            </span>
                                                        </td>
                                                        <td>
                                                            <div>
                                                                <button type="button" class="btn btn-primary btn-rounded btn-xs"
                                                                        data-bind="click:$parent.OnClickEditBtn">
                                                                    <i class="fa fa-edit"></i>
                                                                    <span>Edit</span>
                                                                </button>
                                                                <button type="button" class="btn btn-danger btn-rounded btn-xs"
                                                                        data-bind="click:$parent.Delete_Review, disable:$data.IsDeleting">
                                                                    <i class="fa fa-trash"></i>
                                                                    <span>Delete</span>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                                <tbody data-bind="visible:IsLoading">
                                                    <tr>
                                                        <td colspan="9">
                                                            <span class="glyphicon glyphicon-refresh processingIcon"></span>
                                                            <span>Loading.....</span>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <td style="width:100px;">
                                                            <select id="row-select" data-bind="options:[10,20,50,100], value:Rows, optionsCaption:'Rows'"
                                                                    class="form-control"></select>
                                                        </td>
                                                        <td>
                                                            <span>
                                                                <span>Total:</span>
                                                                <span data-bind="text:Total"></span>
                                                                <span>Records</span>
                                                            </span>
                                                        </td>
                                                        <td colspan="7">
                                                            <div id="page-selection"></div>
                                                        </td>
                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts{

<script>
        (function (h, q) {
            h.fn.bootpag = function (p) {
                function m(c, b) {
                    b = parseInt(b, 10); var d, e = 0 == a.maxVisible ? 1 : a.maxVisible, k = 1 == a.maxVisible ? 0 : 1, n = Math.floor((b - 1) / e) * e, f = c.find("li"); a.page = b = 0 > b ? 0 : b > a.total ? a.total : b; f.removeClass(a.activeClass); d = 1 > b - 1 ? 1 : a.leaps && b - 1 >= a.maxVisible ? Math.floor((b - 1) / e) * e : b - 1; a.firstLastUse && f.first().toggleClass(a.disabledClass, 1 === b); e = f.first(); a.firstLastUse && (e = e.next()); e.toggleClass(a.disabledClass, 1 === b).attr("data-lp", d).find("a").attr("href", g(d)); k = 1 == a.maxVisible ?
            0 : 1; d = b + 1 > a.total ? a.total : a.leaps && b + 1 < a.total - a.maxVisible ? n + a.maxVisible + k : b + 1; e = f.last(); a.firstLastUse && (e = e.prev()); e.toggleClass(a.disabledClass, b === a.total).attr("data-lp", d).find("a").attr("href", g(d)); f.last().toggleClass(a.disabledClass, b === a.total); e = f.filter("[data-lp=" + b + "]"); k = "." + [a.nextClass, a.prevClass, a.firstClass, a.lastClass].join(",."); if (!e.not(k).length) {
                var m = b <= n ? -a.maxVisible : 0; f.not(k).each(function (b) {
                    d = b + 1 + n + m; h(this).attr("data-lp", d).toggle(d <= a.total).find("a").html(d).attr("href",
                    g(d))
                }); e = f.filter("[data-lp=" + b + "]")
            } e.not(k).addClass(a.activeClass); l.data("settings", a)
                } function g(c) { return a.href.replace(a.hrefVariable, c) } var l = this, a = h.extend({
                    total: 0, page: 1, maxVisible: null, leaps: !0, href: "javascript:void(0);", hrefVariable: "{{number}}", next: "&raquo;", prev: "&laquo;", firstLastUse: !1, first: '<span aria-hidden="true">&larr;</span>', last: '<span aria-hidden="true">&rarr;</span>', wrapClass: "pagination", activeClass: "active", disabledClass: "disabled", nextClass: "next", prevClass: "prev",
                    lastClass: "last", firstClass: "first"
                }, l.data("settings") || {}, p || {}); if (0 >= a.total) return this; h.isNumeric(a.maxVisible) || a.maxVisible || (a.maxVisible = parseInt(a.total, 10)); l.data("settings", a); return this.each(function () {
                    var c, b, d = h(this); c = ['<ul class="', a.wrapClass, ' bootpag">']; a.firstLastUse && (c = c.concat(['<li data-lp="1" class="', a.firstClass, '"><a href="', g(1), '">', a.first, "</a></li>"])); a.prev && (c = c.concat(['<li data-lp="1" class="', a.prevClass, '"><a href="', g(1), '">', a.prev, "</a></li>"])); for (b =
                    1; b <= Math.min(a.total, a.maxVisible) ; b++) c = c.concat(['<li data-lp="', b, '"><a href="', g(b), '">', b, "</a></li>"]); a.next && (b = a.leaps && a.total > a.maxVisible ? Math.min(a.maxVisible + 1, a.total) : 2, c = c.concat(['<li data-lp="', b, '" class="', a.nextClass, '"><a href="', g(b), '">', a.next, "</a></li>"])); a.firstLastUse && (c = c.concat(['<li data-lp="', a.total, '" class="last"><a href="', g(a.total), '">', a.last, "</a></li>"])); c.push("</ul>"); d.find("ul.bootpag").remove(); d.append(c.join("")); c = d.find("ul.bootpag"); d.find("li").click(function () {
                        var b =
                        h(this); if (!b.hasClass(a.disabledClass) && !b.hasClass(a.activeClass)) { var c = parseInt(b.attr("data-lp"), 10); l.find("ul.bootpag").each(function () { m(h(this), c) }); l.trigger("page", c) }
                    }); m(c, a.page)
                })
            }
        })(jQuery, window);
</script>

<script src="~/assets/plugins/summernote-master/summernote.min.js"></script>
<script src="~/assets/plugins/summernote-master/summernote-ext-video.js"></script>
<script src="~/assets/plugins/summernote-master/summernote-ext-fontstyle.js"></script>


<script src="~/assets/plugins/select2/js/select2.min.js"></script>
<script src="~/lib/moment/moment.js"></script>
<script src="~/lib/knockout/dist/knockout.js"></script>

<script type="text/javascript">

        function AppViewModel() {
            var self = this;
            self.IsEditing = ko.observable(false);
            self.IsLoading = ko.observable(false);
            self.IsSaving = ko.observable(false);
            self.IsDeleting = ko.observable(false);

            self.Offset = ko.observable(0);
            self.Rows = ko.observable(10).extend({ rateLimit: 500 });
            self.Total = ko.observable(0);
            self.SearchText = ko.observable('').extend({ rateLimit: 500 });
            self.ReviewList = ko.observableArray([]);
            self.ReviewForList = ko.observableArray(['Game','Console','Accessories']);

            self.Review = {
                Id: ko.observable(0),
                Rating: ko.observable(0),
                UserId: ko.observable(0), 
                Likes: ko.observable(0),
                Views: ko.observable(0),
                Igdb_Id: ko.observable(0),
                Category: ko.observable(0),
                Reference_Id: ko.observable(0),
                Rating_Category: ko.observable(0),
                Platform_Id: ko.observable(0), 
                Active: ko.observable(true),
                Link: ko.observable(''),
                Title: ko.observable(''),
                Video: ko.observable(''),
                UserName: ko.observable(''),                
                Content: ko.observable(''),
                Conclusion: ko.observable(''),
                Introduction: ko.observable(''),
                Positive_Points: ko.observable(''),
                Negative_Points: ko.observable(''),
                ReviewFor: ko.observable(''),
                Reference_Name: ko.observable('')
            };

            self.Review.Title.subscribe(function (newValue) {
                newValue = newValue || '';
                newValue = GetWithoutSpecialChar(newValue);
                self.Review.Link(newValue.toLowerCase());
            });

            self.Rows.subscribe(function (newValue) {
                self.ReviewList.removeAll();
                self.Get_ReviewList();
            });

            self.SearchText.subscribe(function (newValue) {
                newValue = newValue || '';
                if (newValue.length == 0) {
                    self.ReviewList.removeAll();
                    self.Get_ReviewList();
                }
                //self.GetSearchResult();
            });

            self.Get_ReviewList = function (offset, index) {
                self.IsLoading(true);
                offset = offset || 0;
                index = index || 1;
                $.get('/manage-review/get-paginated/' + self.Rows() + '/' + offset, function (obj) {
                    var totalPage = (obj.TotalCount > self.Rows()) ? obj.TotalCount / self.Rows() : 1;
                    var reminder = (obj.TotalCount > self.Rows()) ? obj.TotalCount % self.Rows() : 0;
                    if (reminder > 0) { totalPage += 1; }
                    $.each(obj.PagedSet, function (i, o) { self.ReviewList.push(new ReviewViewModel(o)); });
                    $('#page-selection').bootpag({ total: parseInt(totalPage), page: index, maxVisible: 10 });
                    self.Total(obj.TotalCount);
                    self.IsLoading(false);
                    console.log(obj);
                });
            };

            self.GetSearchResult = function (Offset, index) {
                Offset = Offset || 0;
                index = index || 1;
                self.IsLoading(true);
                $.ajax({
                    type: 'POST', dataType: "json",
                    url: '/manage-review/search',
                    contentType: "application/json; charset=utf-8",
                    data: ko.toJSON({ offset: Offset, rows: self.Rows(), searchTxt: self.SearchText() }),
                    success: function (obj) {
                        self.ReviewList.removeAll();
                        var totalPage = (obj.TotalCount > self.Rows()) ? obj.TotalCount / self.Rows() : 1;
                        var reminder = (obj.TotalCount > self.Rows()) ? obj.TotalCount % self.Rows() : 0;
                        if (reminder > 0) { totalPage += 1; }
                        $.each(obj.PagedSet, function (i, o) { self.ReviewList.push(new ReviewViewModel(o)); });
                        $('#page-selection').bootpag({ total: parseInt(totalPage), page: index, maxVisible: 10 });
                        self.Total(obj.TotalCount);
                        self.IsLoading(false);
                    },
                    error: function (result) { console.log(result); toastr.warning('Error'); }
                });
            };

            self.Save_Review = function () {
                var title = self.Review.Title() || '';
                if (title.length == 0) { return; }

                var _content = $('#Content-box').code();
                self.Review.Content(_content);

                var _conclusion = $('#Conclusion-box').code();
                self.Review.Conclusion(_conclusion);

                var _introduction = $('#Introduction-box').code(); 
                self.Review.Introduction(_introduction);

                var _positive_Points =  $('#Positive_Points-box').code();
                self.Review.Positive_Points(_positive_Points);

                var _negative_Points = $('#Negative_Points-box').code();
                self.Review.Negative_Points(_negative_Points);

                self.IsSaving(true);
                var api = self.IsEditing() ? '/manage-review/update' : '/manage-review/add-new';
                $.ajax({
                    type: 'POST', dataType: "json", url: api,
                    contentType: "application/json; charset=utf-8",
                    data: ko.toJSON(self.Review),
                    success: function (data) {
                        self.IsSaving(false); console.log(data);
                        toastr.success('Success'); self.IsEditing(false);
                        self.ReviewList.removeAll(); self.ClearAllFields();
                        self.Get_ReviewList(self.Offset(0), self.Rows());
                    },
                    error: function (result) { console.log(result); toastr.warning('Error'); }
                });

            };

            self.Delete_Review = function (obj) {
                console.log(ko.toJSON(obj));
                obj.IsDeleting(true);
                $.ajax({
                    type: 'GET', dataType: "json",
                    url: '/manage-review/delete/' + obj.Id,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        obj.IsDeleting(false);
                        self.ReviewList.removeAll();
                        self.Get_ReviewList(self.Offset(), self.Rows());
                        console.log(data);
                        toastr.success('Success');
                    },
                    error: function (result) { console.log(result); toastr.warning('Error'); }
                });

            };

            self.OnClickEditBtn = function (obj) {
                console.log('OnClickEditBtn', ko.toJSON(obj));
                self.IsEditing(true);
                self.Review.Id(obj.Id);
                self.Review.Igdb_Id(obj.Igdb_Id);
                self.Review.Title(obj.Title());
                self.Review.Link(obj.Link());
                self.Review.UserName(obj.UserName());                
                self.Review.Reference_Id(obj.Reference_Id());
                self.Review.Category(obj.Category());
                self.Review.Likes(obj.Likes());
                self.Review.Views(obj.Views());
                self.Review.Active(obj.Active());
                self.Review.Rating_Category(obj.Rating_Category());

                self.Review.Platform_Id(obj.Platform_Id());
                self.Review.Video(obj.Video());
                
                self.Review.Rating(obj.Rating());
                self.Review.ReviewFor(obj.ReviewFor());
                self.Review.Reference_Name(obj.Reference_Name());


                self.Review.Content(obj.Content());
                self.Review.Conclusion(obj.Conclusion());
                self.Review.Introduction(obj.Introduction());
                self.Review.Positive_Points(obj.Positive_Points());
                self.Review.Negative_Points(obj.Negative_Points());

                var _content = obj.Content() || '';
                $('#Content-box').code(_content);

                var _conclusion = obj.Conclusion() || '';
                $('#Conclusion-box').code(_conclusion);

                var _introduction = obj.Introduction() || '';
                $('#Introduction-box').code(_introduction);

                var _positive_Points = obj.Positive_Points() || '';
                $('#Positive_Points-box').code(_positive_Points);

                var _negative_Points = obj.Negative_Points() || '';
                $('#Negative_Points-box').code(_negative_Points);
                
                $('#tab-1-txt').text("Update");
                $('a[href="#tab_basic"]').click();
                //$('#CategoryList_select').trigger('change');

                console.log(ko.toJSON(self.Review));
            };

            self.ClearAllFields = function () {
                self.IsEditing(false);
                self.Review.Id(0);
                self.Review.Igdb_Id(0);
                self.Review.Title('');
                self.Review.Link('');
                self.Review.UserName('');
                self.Review.Reference_Id(0);
                self.Review.Category(0);
                self.Review.Likes(0);
                self.Review.Views(0);
                self.Review.Rating_Category(0);
                self.Review.Active(true);

                self.Review.Platform_Id(0);
                self.Review.Video('');
                self.Review.Introduction('');
                self.Review.Content('');
                self.Review.Conclusion('');
                self.Review.Positive_Points('');
                self.Review.Negative_Points('');
                self.Review.Rating(0);
                self.Review.ReviewFor('');
                self.Review.Reference_Name('');

                $('#Content-box').code('');
                $('#Conclusion-box').code('');
                $('#Introduction-box').code('');
                $('#Positive_Points-box').code('');
                $('#Negative_Points-box').code('');

                $('#tab-1-txt').text("Update");
                $('a[href="#tab_price"]').click();
            };

            self.Init = function () {
                self.Get_ReviewList();
            };

        };

        function ReviewViewModel(obj) {
            var x = this;
            x.Id = obj.Id;
            x.Igdb_Id = obj.Igdb_Id;
            x.Created_at = obj.Created_at;
            x.Updated_at = obj.Updated_at;
            x.Active = ko.observable(obj.Active);
            x.IsDeleting = ko.observable(false);
            x.Link = ko.observable(obj.Link);
            x.Title = ko.observable(obj.Title);
            x.Likes = ko.observable(obj.Likes);
            x.Views = ko.observable(obj.Views);
            x.Video = ko.observable(obj.Video);
            x.Rating = ko.observable(obj.Rating);
            x.Content = ko.observable(obj.Content);
            x.UserName = ko.observable(obj.UserName);
            x.Category = ko.observable(obj.Category);
            x.ReviewFor = ko.observable(obj.ReviewFor);
            x.Conclusion = ko.observable(obj.Conclusion);
            x.Platform_Id = ko.observable(obj.Platform_Id);
            x.Reference_Id = ko.observable(obj.Reference_Id);
            x.Introduction = ko.observable(obj.Introduction);
            x.Positive_Points = ko.observable(obj.Positive_Points);
            x.Negative_Points = ko.observable(obj.Negative_Points);
            x.Rating_Category = ko.observable(obj.Rating_Category);

            x.Reference_Name = ko.observable(obj.Reference_Name);
            x.Reference_Link = ko.observable(obj.Reference_Link);
            x.Reference_Type_Link = ko.observable(obj.Reference_Type_Link);
            x.Reference_Type_Name = ko.observable(obj.Reference_Type_Name);
        };

        $(document).ready(function () {
            var app = new AppViewModel();
            ko.applyBindings(app);
            app.Rows(10);
            app.Init();

            $('#row-select').select2();
            $('#ReviewForList_select').select2();
            $('#page-selection').bootpag({ total: 10, page: 1, maxVisible: 10 });

            $('#page-selection').on('page', function (event, num) {
                console.log('bootpag', event, num);
                var offset = (app.Rows() * (num - 1));
                app.ReviewList.removeAll();
                if (app.SearchText().length > 0) {
                    app.GetSearchResult(offset, num);
                } else { app.Get_ReviewList(offset, num); }
            });


            $('#Content-box, #Conclusion-box, #Introduction-box, #Positive_Points-box, #Negative_Points-box').summernote({
                placeholder: 'Enter page content', height: 100,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video', 'hr']],
                    ['view', ['fullscreen', 'codeview']],
                    ['help', ['help']]
                ],
                popover: {
                    image: [
                      ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],
                      ['float', ['floatLeft', 'floatRight', 'floatNone']],
                      ['remove', ['removeMedia']]
                    ]
                }, dialogsFade: true,
                onImageUpload: function (files, editor, welEditable) {
                    var _data = new FormData();
                    _data.append("file", files[0]);
                    $.ajax({
                        type: "POST", url: "/uploadfile", data: _data,
                        cache: false, contentType: false, processData: false,
                        success: function (url) { editor.insertImage(welEditable, url); }
                    });
                }
            });

           

        });
</script>
}