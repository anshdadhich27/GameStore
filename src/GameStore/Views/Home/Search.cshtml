@using GameStore.Models.Entity
@model SearchResult
@{
    ViewData["Title"] = ViewBag.PageTitle;

    string genre_url = ViewBag.GenreUrl as string;
    string platform_url = ViewBag.PlarformUrl as string;
    string release_date = ViewBag.Release_Date as string;
    string condition = ViewBag.Condition as string;
    string typeGame = ViewBag.TypeGame as string;
    string ratings = ViewBag.Ratings as string;
    string orderby = ViewBag.orderby as string;
}

@section styles{
    <link href="~/css/product-listing.min.css" rel="stylesheet" />
}


<div class="wrapper brd-crum">
    <div class="container">
        <div class="row">
            <div class="col-md-12">

            </div>
        </div>
    </div>
</div>


<div class="wrapper product-view">
    <div class="middle">
        <div class="container conainerSection">
            <div class="row">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="product-listing-banner">
                            <div class="banner-img">

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="sideBar">
                        <div class="filters">
                            <span class="pull-left txt-upr">
                                Filters
                            </span>
                        </div>

                        <div class="filterBlock">
                            <ul class="product-category">
                                <li>
                                    <a href="#" class="txt-upr">Platform</a>
                                    <ul>
                                        @{
                                            var platf_list = ViewBag.PlarformList as IEnumerable<GamePlatform>;
                                            if (platf_list != null)
                                            {
                                                foreach (var g in platf_list)
                                                {
                                                    <li class="li-check platform">
                                                        <input type="checkbox" name="@g.NameUrl" title="@g.Name"
                                                               id="@string.Format("checkIt-PLTF{0}", g.Id)" @(string.IsNullOrEmpty(platform_url) ? "" : platform_url.Contains(g.NameUrl) ? "checked" : "")>&nbsp; &nbsp; @g.Name
                                                            <label for="@string.Format("checkIt-PLTF{0}", g.Id)"></label>
                                                        </li>
                                                }
                                            }
                                        }
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="txt-upr hide">Genre</a>
                                    <ul>
                                        @{
                                            var genre_list = ViewBag.GenreList as IEnumerable<Genere>;
                                            if (genre_list != null)
                                            {
                                                foreach (var g in genre_list)
                                                {
                                                    <li class="li-check genre">
                                                        <input type="checkbox" name="@g.NameUrl" title="@g.Name"
                                                               id="@string.Format("checkIt-G{0}", g.Id)" @(string.IsNullOrEmpty(genre_url) ? "" : genre_url.Contains(g.NameUrl) ? "checked" : "")>&nbsp; &nbsp; @g.Name
                                                            <label for="@string.Format("checkIt-G{0}", g.Id)"></label>
                                                        </li>
                                                }
                                            }
                                        }

                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="txt-upr hide">Release date</a>
                                    <ul>
                                        <li class="li-check release-date">
                                            <input type="checkbox" id="checkIt-RD1" name="new-releases"
                                                   @(string.IsNullOrEmpty(release_date) ? "" : release_date.Contains("new-releases") ? "checked" : "")>&nbsp; &nbsp; New releases
                                            <label for="checkIt-RD1"></label>
                                        </li>
                                        <li class="li-check release-date">
                                            <input type="checkbox" id="checkIt-RD4" name="last-30-days"
                                                   @(string.IsNullOrEmpty(release_date) ? "" : release_date.Contains("last-30-days") ? "checked" : "")>&nbsp; &nbsp; Last 30 days
                                            <label for="checkIt-RD4"></label>
                                        </li>
                                        <li class="li-check release-date">
                                            <input type="checkbox" id="checkIt-RD5" name="last-90-days"
                                                   @(string.IsNullOrEmpty(release_date) ? "" : release_date.Contains("last-90-days") ? "checked" : "")>&nbsp; &nbsp; Last 90 days
                                            <label for="checkIt-RD5"></label>
                                        </li>
                                        <li class="li-check release-date">
                                            <input type="checkbox" id="checkIt-RD6" name="best-of-2017"
                                                   @(string.IsNullOrEmpty(release_date) ? "" : release_date.Contains("best-of-2017") ? "checked" : "")>&nbsp; &nbsp; Best of 2017
                                            <label for="checkIt-RD6"></label>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="txt-upr hide">Condition</a>
                                    <ul>
                                        <li class="li-check condition">
                                            <input type="checkbox" name="new" id="checkIt-C1"
                                                   @(string.IsNullOrEmpty(condition) ? "" : condition.Contains("new") ? "checked" : "")>&nbsp; &nbsp; New
                                            <label for="checkIt-C1"></label>
                                        </li>
                                        <li class="li-check condition">
                                            <input type="checkbox" name="pre-owned" id="checkIt-C2"
                                                   @(string.IsNullOrEmpty(condition) ? "" : condition.Contains("pre-owned") ? "checked" : "")>&nbsp; &nbsp; PRE-OWNED
                                            <label for="checkIt-C2"></label>
                                        </li>
                                    </ul>
                                </li>
                                <li class="hidden">
                                    <a href="#" class="txt-upr hide">Type</a>
                                    <ul>
                                        <li class="li-check typeGame">
                                            <input type="checkbox" name="boxed" id="checkIt-TY1"
                                                   @(string.IsNullOrEmpty(typeGame) ? "" : typeGame.Contains("boxed") ? "checked" : "")>&nbsp; &nbsp; Boxed games
                                            <label for="checkIt-TY1"></label>
                                        </li>
                                        <li class="li-check typeGame">
                                            <input type="checkbox" name="dlc" id="checkIt-TY2"
                                                   @(string.IsNullOrEmpty(typeGame) ? "" : typeGame.Contains("dlc") ? "checked" : "")>&nbsp; &nbsp; DLC games
                                            <label for="checkIt-TY2"></label>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="txt-upr hide">PRICE</a>
                                    <ul>
                                        <li>
                                            <div class="priceBox">
                                                <div id="slider-range"></div>
                                                <p class="value" type="text" id="amount">
                                                    <span class="pull-left" id="amount-start"></span>
                                                    <span class="pull-right" id="amount-end"></span>
                                                </p>
                                                @{
                                                    var queryString = Context.Request.Query;
                                                    Microsoft.Extensions.Primitives.StringValues maxInt;
                                                    queryString.TryGetValue("max", out maxInt);

                                                    if (queryString.TryGetValue("max", out maxInt))
                                                    {
                                                        int maxPrice = int.Parse(maxInt);
                                                        if (maxPrice > 0)
                                                        {
                                                            <p>
                                                                <button type="button" class="btn btn-default btn-xs" onclick="ResetPriceFilter();">
                                                                    <span>Reset</span>
                                                                </button>
                                                            </p>
                                                        }

                                                    }
                                                }
                                            </div>
                                        </li>
                                    </ul>
                                </li>
                                <li>
                                    <a href="#" class="txt-upr hide">Rating</a>
                                    <ul class="rate-bare">
                                        <li class="li-check">
                                            <div class="pull-left">
                                                <input type="checkbox" id="checkIt-RT1" name="5-star"
                                                       @(string.IsNullOrEmpty(ratings) ? "" : ratings.Contains("5-star") ? "checked" : "")>&nbsp;&nbsp;&nbsp;5 Star
                                                <label for="checkIt-RT1"></label>
                                            </div>
                                            <div class="pull-left">
                                                <img src="~/images/5star.png" alt="5 Start" />
                                            </div>
                                        </li>
                                        <li class="li-check">
                                            <div class="pull-left">
                                                <input type="checkbox" id="checkIt-RT2" name="4-star"
                                                       @(string.IsNullOrEmpty(ratings) ? "" : ratings.Contains("4-star") ? "checked" : "")>&nbsp;&nbsp;&nbsp;4+ Star
                                                <label for="checkIt-RT2"></label>
                                            </div>
                                            <div class="pull-left">
                                                <img src="~/images/4star.png" alt="4 Start" />
                                            </div>
                                        </li>
                                        <li class="li-check">
                                            <div class="pull-left">
                                                <input type="checkbox" id="checkIt-RT3" name="3-star"
                                                       @(string.IsNullOrEmpty(ratings) ? "" : ratings.Contains("3-star") ? "checked" : "")>&nbsp;&nbsp;&nbsp;3+ Star
                                                <label for="checkIt-RT3"></label>
                                            </div>
                                            <div class="pull-left">
                                                <img src="~/images/3star.png" alt="3 Start" />
                                            </div>
                                        </li>
                                        <li class="li-check">
                                            <div class="pull-left">
                                                <input type="checkbox" id="checkIt-RT4" name="2-star"
                                                       @(string.IsNullOrEmpty(ratings) ? "" : ratings.Contains("2-star") ? "checked" : "")>&nbsp;&nbsp;&nbsp;2+ Star
                                                <label for="checkIt-RT4"></label>
                                            </div>
                                            <div class="pull-left">
                                                <img src="~/images/2star.png" alt="2 Start" />
                                            </div>
                                        </li>
                                        <li class="li-check">
                                            <div class="pull-left">
                                                <input type="checkbox" id="checkIt-RT5" name="1-star"
                                                       @(string.IsNullOrEmpty(ratings) ? "" : ratings.Contains("1-star") ? "checked" : "")>&nbsp;&nbsp;&nbsp;1+ Star
                                                <label for="checkIt-RT5"></label>
                                            </div>
                                            <div class="pull-left">
                                                <img src="~/images/1star.png" alt="1 Start" />
                                            </div>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>

                    </div>
                </div>
                <div class="col-md-9">
                    <div class="productListFilterTopRow">
                        <div class="pr-list-title">
                            <div class="pull-left">
                                <span class="game-name">
                                    @{
                                        if (!string.IsNullOrEmpty(ViewBag.Search_Query))
                                        {
                                            <span>Search for:</span>
                                            <span>@ViewBag.Search_Query</span>
                                        }
                                    }
                                </span>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="showTitle">
                                    <span>Showing </span>
                                    <span id="page-index">@ViewBag.PageIndex</span>
                                    <span>–</span>
                                    <span id="items-on-page">@Model.GameList.Count()</span>
                                    <span>of</span>
                                    <span id="total-items">@Model.GameList.Count()</span>
                                    <span>items</span>
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="filterBy pull-right">
                                    Sort By
                                    <select class="custome" name="order" id="select_order">
                                        @if (string.IsNullOrEmpty(orderby) || orderby == "Price low to high")
                                        {
                                            <option selected="selected">Price low to high</option>
                                        }
                                        else
                                        {
                                            <option>Price low to high</option>
                                        }
                                        @if (orderby == "Price high to low")
                                        {
                                            <option selected="selected">Price high to low</option>
                                        }
                                        else
                                        {
                                            <option>Price high to low</option>
                                        }
                                        @if (orderby == "Popularity")
                                        {
                                            <option selected="selected">Popularity</option>
                                        }
                                        else
                                        {
                                            <option>Popularity</option>
                                        }
                                        @if (orderby == "Best Sellers")
                                        {
                                            <option selected="selected"> Best Sellers</option>
                                        }
                                        else
                                        {
                                            <option> Best Sellers</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="productListing">
                        @if (Model.GameList.Count() == 0 && Model.Accessories.Count() == 0 && Model.Consoles.Count() == 0)
                        {
                            <Span><b>Whoops!</b> Product not available. Please search with different Keyword.</Span>
                        }
                        else
                        {
                            <div class="row" id="game-listing">
                                @await Html.PartialAsync("_Game_Search_Result_Partial", Model)
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>









@section scripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script type="text/javascript">
        var min_price = parseInt('@ViewBag.MinPrice');
        var max_selected_price = parseInt('@ViewBag.MaxSelectedPrice');
        var max_price = parseInt('@ViewBag.MaxPrice');
        $(function () {
            $("#slider-range").slider({
                range: true,
                min: 0,
                max: max_price,
                values: [min_price, max_selected_price],
                slide: function (event, ui) {
                    min_price = ui.values[0];
                    max_selected_price = ui.values[1];
                    $('#amount-start').text("AED " + min_price + ".00");
                    $('#amount-end').text("AED " + max_selected_price + ".00");

                    let url = new URL(window.location.href);
                    let params = url.searchParams;

                    if (params.has('min')) { params.set('min', min_price); }
                    else { params.append('min', min_price); }

                    if (params.has('max')) { params.set('max', max_selected_price); }
                    else { params.append('max', max_selected_price); }

                    console.log('min:', min_price, 'max:', max_selected_price);
                    window.location.href = url.href;
                }
            });
            $('#amount-start').text("AED " + $("#slider-range").slider("values", 0) + ".00");
            $('#amount-end').text("AED " + $("#slider-range").slider("values", 1) + ".00");
        });
        (function ($) {
            var fold = $('.product-category ul').prev();
            fold.addClass('dir').attr('href', 'javascript:;');
            fold.on('click', function () {
                var $this = $(this);
                $this.toggleClass('hide');
                $this.next().toggle('300');
            });
        })(jQuery);

        function ResetPriceFilter() {
            let url = new URL(window.location.href);
            let params = url.searchParams;
            if (params.has('min')) { params.set('min', 0); }
            if (params.has('max')) { params.set('max', 0); }
            window.location.href = url.href;
        };

        $(document).ready(function () {
            var page_index = $('#page-index').text();
            page_index = parseInt(page_index);
            //console.log('page_index', page_index);

            var items_on_page = $('#items-on-page').text();
            items_on_page = parseInt(items_on_page);
            //console.log('items_on_page', items_on_page);

            var total_items = $('#total-items').text();
            total_items = parseInt(total_items);
            //console.log('total_items', total_items);

            var totalPage = (total_items > 20) ? total_items / 20 : 1;
            var reminder = (total_items > 20) ? total_items % 20 : 0;
            if (reminder > 0) { totalPage += 1; }


            $('.genre input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('g')) {
                    var param = params.get('g') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('g', param);
                }
                else { params.append('g', e.target.name); }
                window.location.href = url.href;
            });

            $('.platform input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('p')) {
                    var param = params.get('p') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('p', param);
                }
                else { params.append('p', e.target.name); }
                window.location.href = url.href;
            });

            $('.release-date input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('rd')) {
                    var param = params.get('rd') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('rd', param);
                }
                else { params.append('rd', e.target.name); }
                window.location.href = url.href;
            });

            $('.condition input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('c')) {
                    var param = params.get('c') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('c', param);
                }
                else { params.append('c', e.target.name); }
                window.location.href = url.href;
            });

            $('.typeGame input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('t')) {
                    var param = params.get('t') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('t', param);
                }
                else { params.append('t', e.target.name); }
                window.location.href = url.href;
            });

            $('.rate-bare .li-check input[type="checkbox"]').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('r')) {
                    var param = params.get('r') || '';
                    if (e.target.checked) { param += "," + e.target.name; }
                    else { param = param.replace(e.target.name, ''); }
                    params.set('r', param);
                }
                else { params.append('r', e.target.name); }
                window.location.href = url.href;
            });
            $('#select_order').on('change', function (e) {
                let url = new URL(e.target.baseURI);
                let params = url.searchParams;
                if (params.has('order')) {

                    var param = params.get('order') || '';

                    param = param.replace(e.target.name, '');
                    param = '';
                    param += this.value;

                    params.set('order', param);
                }
                else { params.append('order', this.value); }
                window.location.href = url.href;
            });
        });
    </script>


}